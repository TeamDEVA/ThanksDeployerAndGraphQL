// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class changeInBalance extends ethereum.Event {
  get params(): changeInBalance__Params {
    return new changeInBalance__Params(this);
  }
}

export class changeInBalance__Params {
  _event: changeInBalance;

  constructor(event: changeInBalance) {
    this._event = event;
  }

  get param0(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get partnerId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class handleEmployeeEvent extends ethereum.Event {
  get params(): handleEmployeeEvent__Params {
    return new handleEmployeeEvent__Params(this);
  }
}

export class handleEmployeeEvent__Params {
  _event: handleEmployeeEvent;

  constructor(event: handleEmployeeEvent) {
    this._event = event;
  }

  get email(): string {
    return this._event.parameters[0].value.toString();
  }

  get workerId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get partnerId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get monthlyWage(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get workerHashData(): string {
    return this._event.parameters[4].value.toString();
  }

  get time(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get mode(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }
}

export class handlePartnerEvent extends ethereum.Event {
  get params(): handlePartnerEvent__Params {
    return new handlePartnerEvent__Params(this);
  }
}

export class handlePartnerEvent__Params {
  _event: handlePartnerEvent;

  constructor(event: handlePartnerEvent) {
    this._event = event;
  }

  get partnerId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get partnerEmail(): string {
    return this._event.parameters[1].value.toString();
  }

  get balance(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get partnerLicenseId(): string {
    return this._event.parameters[3].value.toString();
  }

  get partnerHashData(): string {
    return this._event.parameters[4].value.toString();
  }

  get mode(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get blocked(): boolean {
    return this._event.parameters[6].value.toBoolean();
  }
}

export class newMonthEvent extends ethereum.Event {
  get params(): newMonthEvent__Params {
    return new newMonthEvent__Params(this);
  }
}

export class newMonthEvent__Params {
  _event: newMonthEvent;

  constructor(event: newMonthEvent) {
    this._event = event;
  }

  get partnerId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get time(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get nextPayday(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class newWithdrawalReceipt extends ethereum.Event {
  get params(): newWithdrawalReceipt__Params {
    return new newWithdrawalReceipt__Params(this);
  }
}

export class newWithdrawalReceipt__Params {
  _event: newWithdrawalReceipt;

  constructor(event: newWithdrawalReceipt) {
    this._event = event;
  }

  get workerId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get time(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ThanksPay2__findEmployeeResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;
  value5: BigInt;
  value6: boolean;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: BigInt,
    value3: BigInt,
    value4: BigInt,
    value5: BigInt,
    value6: boolean
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromBoolean(this.value6));
    return map;
  }
}

export class ThanksPay2__findPartnerResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;
  value4: boolean;
  value5: boolean;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: BigInt,
    value3: BigInt,
    value4: boolean,
    value5: boolean
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromBoolean(this.value4));
    map.set("value5", ethereum.Value.fromBoolean(this.value5));
    return map;
  }
}

export class ThanksPay2__getWithdrawableResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class ThanksPay2 extends ethereum.SmartContract {
  static bind(address: Address): ThanksPay2 {
    return new ThanksPay2("ThanksPay2", address);
  }

  findEmployee(param0: BigInt): ThanksPay2__findEmployeeResult {
    let result = super.call(
      "findEmployee",
      "findEmployee(uint256):(uint256,uint256,uint256,uint256,uint256,uint256,bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new ThanksPay2__findEmployeeResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBigInt(),
      result[6].toBoolean()
    );
  }

  try_findEmployee(
    param0: BigInt
  ): ethereum.CallResult<ThanksPay2__findEmployeeResult> {
    let result = super.tryCall(
      "findEmployee",
      "findEmployee(uint256):(uint256,uint256,uint256,uint256,uint256,uint256,bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new ThanksPay2__findEmployeeResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toBigInt(),
        value[6].toBoolean()
      )
    );
  }

  findPartner(param0: BigInt): ThanksPay2__findPartnerResult {
    let result = super.call(
      "findPartner",
      "findPartner(uint256):(uint256,uint256,uint256,uint256,bool,bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new ThanksPay2__findPartnerResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBoolean(),
      result[5].toBoolean()
    );
  }

  try_findPartner(
    param0: BigInt
  ): ethereum.CallResult<ThanksPay2__findPartnerResult> {
    let result = super.tryCall(
      "findPartner",
      "findPartner(uint256):(uint256,uint256,uint256,uint256,bool,bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new ThanksPay2__findPartnerResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBoolean(),
        value[5].toBoolean()
      )
    );
  }

  getWithdrawable(
    employeeId: BigInt,
    timestamp: BigInt
  ): ThanksPay2__getWithdrawableResult {
    let result = super.call(
      "getWithdrawable",
      "getWithdrawable(uint256,uint256):(uint256,uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(employeeId),
        ethereum.Value.fromUnsignedBigInt(timestamp)
      ]
    );

    return new ThanksPay2__getWithdrawableResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_getWithdrawable(
    employeeId: BigInt,
    timestamp: BigInt
  ): ethereum.CallResult<ThanksPay2__getWithdrawableResult> {
    let result = super.tryCall(
      "getWithdrawable",
      "getWithdrawable(uint256,uint256):(uint256,uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(employeeId),
        ethereum.Value.fromUnsignedBigInt(timestamp)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new ThanksPay2__getWithdrawableResult(
        value[0].toBigInt(),
        value[1].toBigInt()
      )
    );
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class HandleEmployeeCall extends ethereum.Call {
  get inputs(): HandleEmployeeCall__Inputs {
    return new HandleEmployeeCall__Inputs(this);
  }

  get outputs(): HandleEmployeeCall__Outputs {
    return new HandleEmployeeCall__Outputs(this);
  }
}

export class HandleEmployeeCall__Inputs {
  _call: HandleEmployeeCall;

  constructor(call: HandleEmployeeCall) {
    this._call = call;
  }

  get mode(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get workerId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get partnerId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get workerEmail(): string {
    return this._call.inputValues[3].value.toString();
  }

  get workerHashData(): string {
    return this._call.inputValues[4].value.toString();
  }

  get monthlyFullWage(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }
}

export class HandleEmployeeCall__Outputs {
  _call: HandleEmployeeCall;

  constructor(call: HandleEmployeeCall) {
    this._call = call;
  }
}

export class HandlePartnerCall extends ethereum.Call {
  get inputs(): HandlePartnerCall__Inputs {
    return new HandlePartnerCall__Inputs(this);
  }

  get outputs(): HandlePartnerCall__Outputs {
    return new HandlePartnerCall__Outputs(this);
  }
}

export class HandlePartnerCall__Inputs {
  _call: HandlePartnerCall;

  constructor(call: HandlePartnerCall) {
    this._call = call;
  }

  get mode(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get partnerId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get partnerEmail(): string {
    return this._call.inputValues[2].value.toString();
  }

  get balance(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get partnerLicenseId(): string {
    return this._call.inputValues[4].value.toString();
  }

  get partnerHashData(): string {
    return this._call.inputValues[5].value.toString();
  }

  get blocked(): boolean {
    return this._call.inputValues[6].value.toBoolean();
  }
}

export class HandlePartnerCall__Outputs {
  _call: HandlePartnerCall;

  constructor(call: HandlePartnerCall) {
    this._call = call;
  }
}

export class PayDayCall extends ethereum.Call {
  get inputs(): PayDayCall__Inputs {
    return new PayDayCall__Inputs(this);
  }

  get outputs(): PayDayCall__Outputs {
    return new PayDayCall__Outputs(this);
  }
}

export class PayDayCall__Inputs {
  _call: PayDayCall;

  constructor(call: PayDayCall) {
    this._call = call;
  }

  get partnerId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get lastPayday(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get blockFromDay(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get balanceAdd(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class PayDayCall__Outputs {
  _call: PayDayCall;

  constructor(call: PayDayCall) {
    this._call = call;
  }
}

export class WithdrawMoneyCall extends ethereum.Call {
  get inputs(): WithdrawMoneyCall__Inputs {
    return new WithdrawMoneyCall__Inputs(this);
  }

  get outputs(): WithdrawMoneyCall__Outputs {
    return new WithdrawMoneyCall__Outputs(this);
  }
}

export class WithdrawMoneyCall__Inputs {
  _call: WithdrawMoneyCall;

  constructor(call: WithdrawMoneyCall) {
    this._call = call;
  }

  get employeeId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class WithdrawMoneyCall__Outputs {
  _call: WithdrawMoneyCall;

  constructor(call: WithdrawMoneyCall) {
    this._call = call;
  }
}
